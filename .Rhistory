new_gen <- prior_gen +1
just_prior_gen_df <- filter(snail_df, generation == prior_gen) %>% filter(snailcolor == "white")
df_rows <- nrow(just_prior_gen_df)
for(i in 1:df_rows){
p <- just_prior_gen_df[i,"snails"] / popsize
new_white_count <- sum(runif(popsize) < p)
#new_snails <- recode(new_snails,"TRUE" = "white", "FALSE" = "red")
new_row1 <- list(just_prior_gen_df[i,1],new_gen, "white", new_white_count)
new_row2 <- list(just_prior_gen_df[i,1],new_gen, "red", popsize-new_white_count)
snail_df <- rbind(snail_df,new_row2,new_row1)
}
return(snail_df)
}
runif(1, 0, 500)
runif(1, 0, 5000)
runif(1, 0, 5000)
runif(1, 0, 5000)
runif(1, 0, 5000)
generate_new_gen <- function(snail_df){
popsize <- snail_df$snails[1]*2
prior_gen <- max(snail_df$generation)
new_gen <- prior_gen +1
just_prior_gen_df <- filter(snail_df, generation == prior_gen) %>% filter(snailcolor == "white")
df_rows <- nrow(just_prior_gen_df)
for(i in 1:df_rows){
new_white_count <- as.integer(runif(1, 0, just_prior_gen_df$snails[i]))
new_row1 <- list(just_prior_gen_df[i,1],new_gen, "white", new_white_count)
new_row2 <- list(just_prior_gen_df[i,1],new_gen, "red", popsize-new_white_count)
snail_df <- rbind(snail_df,new_row2,new_row1)
}
return(snail_df)
}
many_new_gens <- function(snail_df, nsamples, ngen = 10){
for(i in 1:ngen){
snail_df <- generate_new_gen(snail_df,nsamples)
}
return(snail_df)
}
snail_df <- generate_gen1(100000)
#snail_df <- generate_new_gen(snail_df)
many_new_gens(snail_df)
many_new_gens <- function(snail_df, ngen = 10){
for(i in 1:ngen){
snail_df <- generate_new_gen(snail_df,nsamples)
}
return(snail_df)
}
snail_df <- generate_gen1(100000)
#snail_df <- generate_new_gen(snail_df)
many_new_gens(snail_df)
many_new_gens <- function(snail_df, ngen = 10){
for(i in 1:ngen){
snail_df <- generate_new_gen(snail_df)
}
return(snail_df)
}
snail_df <- generate_gen1(100000)
#snail_df <- generate_new_gen(snail_df)
many_new_gens(snail_df)
snail_df <- generate_gen1(100000)
#snail_df <- generate_new_gen(snail_df)
snail_df <- many_new_gens(snail_df)
ggplot(filter(snail_df,snailcolor==white), aes(generation,snails, color=group))+
geom_line()
library(ggplot2)
ggplot(filter(snail_df,snailcolor==white), aes(generation,snails, color=group))+
geom_line()
ggplot(filter(snail_df,snailcolor=="white"), aes(generation,snails, color=group))+
geom_line()
ggplot(filter(snail_df,snailcolor=="white"), aes(generation,snails, color=as.factor(group)))+
geom_line()
sim_snails <- function(popsize){
snail_df <- generate_gen1(popsize)
#snail_df <- generate_new_gen(snail_df)
snail_df <- many_new_gens(snail_df)
#above assumes each group is a separate pop evolving
return(snail_df)
}
snail_df <- sim_snails(10000)
ggplot(filter(snail_df,snailcolor=="white"), aes(generation,snails, color=as.factor(group)))+
geom_line()
generate_gen1 <- function(popsize=50, tidepools = 3){
group <- rep(1:tidepools, each=2)
generation <- rep(0, each=tidepools*2)
snailcolor <- rep(c("white","red"),tidepools)
snails <- rep(popsize/2,tidepools)
data.frame(group,generation,snailcolor,snails)
}
sim_snails <- function(popsize){
snail_df <- generate_gen1(popsize)
#snail_df <- generate_new_gen(snail_df)
snail_df <- many_new_gens(snail_df)
#above assumes each group is a separate pop evolving
return(snail_df)
}
sim_snails <- function(popsize=50, tidepools = 3){
snail_df <- generate_gen1(popsize,tidepools)
#snail_df <- generate_new_gen(snail_df)
snail_df <- many_new_gens(snail_df)
#above assumes each group is a separate pop evolving
return(snail_df)
}
snail_df <- sim_snails(10000)
ggplot(filter(snail_df,snailcolor=="white"), aes(generation,snails, color=as.factor(group)))+
geom_line()
generate_new_gen <- function(snail_df){
}
generate_gen1 <- function(popsize=50, tidepools = 3){
group <- rep(1:tidepools, each=2)
generation <- rep(0, each=tidepools*2)
snailcolor <- rep(c("white","red"),tidepools)
snails <- rep(popsize/2,tidepools)
data.frame(group,generation,snailcolor,snails)
}
generate_new_gena <- function(snail_df){
popsize <- snail_df$snails[1]+snail_df$snails[2]
prior_gen <- max(snail_df$generation)
new_gen <- prior_gen +1
just_prior_gen_df <- filter(snail_df, generation == prior_gen) %>% filter(snailcolor == "white")
df_rows <- nrow(just_prior_gen_df)
for(i in 1:df_rows){
p <- just_prior_gen_df[i,"snails"] / popsize
new_white_count <- sum(runif(popsize) < p)
#new_snails <- recode(new_snails,"TRUE" = "white", "FALSE" = "red")
new_row1 <- list(just_prior_gen_df[i,1],new_gen, "white", new_white_count)
new_row2 <- list(just_prior_gen_df[i,1],new_gen, "red", popsize-new_white_count)
snail_df <- rbind(snail_df,new_row2,new_row1)
}
return(snail_df)
}
generate_new_gen <- function(snail_df){
prior_gen <- max(snail_df$generation)
new_gen <- prior_gen +1
just_prior_gen_df <- filter(snail_df, generation == prior_gen) %>% filter(snailcolor == "white")
df_rows <- nrow(just_prior_gen_df)
for(i in 1:df_rows){
snails <- c(rep("w",just_prior_gen_df$snails[i],rep("r",popsize-just_prior_gen_df$snails[i])) #vector of snails
newsnails <- sample(snails, size = popsize/2, replace = FALSE)
new_white_count <- 2* sum(newsnails=="w") #find whites and double
new_row1 <- list(just_prior_gen_df[i,1],new_gen, "white", new_white_count)
new_row2 <- list(just_prior_gen_df[i,1],new_gen, "red", popsize-new_white_count)
snail_df <- rbind(snail_df,new_row2,new_row1)
}
return(snail_df)
}
many_new_gens <- function(snail_df, ngen = 10){
for(i in 1:ngen){
snail_df <- generate_new_gen(snail_df)
}
return(snail_df)
}
sim_snails <- function(popsize=50, tidepools = 3){
snail_df <- generate_gen1(popsize,tidepools)
#snail_df <- generate_new_gen(snail_df)
snail_df <- many_new_gens(snail_df)
#above assumes each group is a separate pop evolving
return(snail_df)
}
snail_df <- sim_snails(10000)
#prob want multiple samples from one pop
ggplot(filter(snail_df,snailcolor=="white"), aes(generation,snails, color=as.factor(group)))+
geom_line()
library(dplyr)
library(ggplot2)
snail_df <- sim_snails(10000)
ggplot(filter(snail_df,snailcolor=="white"), aes(generation,snails, color=as.factor(group)))+
geom_line()
generate_new_gen <- function(snail_df){
popsize <- snail_df$snails[1]*2
prior_gen <- max(snail_df$generation)
new_gen <- prior_gen +1
just_prior_gen_df <- filter(snail_df, generation == prior_gen) %>% filter(snailcolor == "white")
df_rows <- nrow(just_prior_gen_df)
for(i in 1:df_rows){
snails <- c(rep("w",just_prior_gen_df$snails[i],rep("r",popsize-just_prior_gen_df$snails[i])) #vector of snails
newsnails <- sample(snails, size = popsize/2, replace = FALSE)
new_white_count <- 2* sum(newsnails=="w") #find whites and double
new_row1 <- list(just_prior_gen_df[i,1],new_gen, "white", new_white_count)
new_row2 <- list(just_prior_gen_df[i,1],new_gen, "red", popsize-new_white_count)
snail_df <- rbind(snail_df,new_row2,new_row1)
}
return(snail_df)
}
generate_new_gen <- function(snail_df){
popsize <- snail_df$snails[1]*2
prior_gen <- max(snail_df$generation)
new_gen <- prior_gen +1
just_prior_gen_df <- filter(snail_df, generation == prior_gen) %>% filter(snailcolor == "white")
df_rows <- nrow(just_prior_gen_df)
for(i in 1:df_rows){
snails <- c(rep("w",just_prior_gen_df$snails[i],rep("r",popsize-just_prior_gen_df$snails[i]))) #vector of snails
newsnails <- sample(snails, size = popsize/2, replace = FALSE)
new_white_count <- 2* sum(newsnails=="w") #find whites and double
new_row1 <- list(just_prior_gen_df[i,1],new_gen, "white", new_white_count)
new_row2 <- list(just_prior_gen_df[i,1],new_gen, "red", popsize-new_white_count)
snail_df <- rbind(snail_df,new_row2,new_row1)
}
return(snail_df)
}
many_new_gens <- function(snail_df, ngen = 10){
for(i in 1:ngen){
snail_df <- generate_new_gen(snail_df)
}
return(snail_df)
}
sim_snails <- function(popsize=50, tidepools = 3, ngen = 10){
snail_df <- generate_gen1(popsize,tidepools)
#snail_df <- generate_new_gen(snail_df)
snail_df <- many_new_gens(snail_df, ngen)
#above assumes each group is a separate pop evolving
return(snail_df)
}
snail_df <- sim_snails(10000)
ggplot(filter(snail_df,snailcolor=="white"), aes(generation,snails, color=as.factor(group)))+
geom_line()
snail_df <- sim_snails()
ggplot(filter(snail_df,snailcolor=="white"), aes(generation,snails, color=as.factor(group)))+
geom_line()
generate_new_gen <- function(snail_df){
popsize <- snail_df$snails[1]*2
prior_gen <- max(snail_df$generation)
new_gen <- prior_gen +1
just_prior_gen_df <- filter(snail_df, generation == prior_gen) %>% filter(snailcolor == "white")
df_rows <- nrow(just_prior_gen_df)
for(i in 1:df_rows){
snails <- c(rep("w",just_prior_gen_df$snails[i]),
rep("r",popsize-just_prior_gen_df$snails[i])) #vector of snails
newsnails <- sample(snails, size = popsize/2, replace = FALSE)
new_white_count <- 2* sum(newsnails=="w") #find whites and double
new_row1 <- list(just_prior_gen_df[i,1],new_gen, "white", new_white_count)
new_row2 <- list(just_prior_gen_df[i,1],new_gen, "red", popsize-new_white_count)
snail_df <- rbind(snail_df,new_row2,new_row1)
}
return(snail_df)
}
many_new_gens <- function(snail_df, ngen = 10){
for(i in 1:ngen){
snail_df <- generate_new_gen(snail_df)
}
return(snail_df)
}
sim_snails <- function(popsize=50, tidepools = 3, ngen = 10){
snail_df <- generate_gen1(popsize,tidepools)
#snail_df <- generate_new_gen(snail_df)
snail_df <- many_new_gens(snail_df, ngen)
#above assumes each group is a separate pop evolving
return(snail_df)
}
snail_df <- sim_snails()
ggplot(filter(snail_df,snailcolor=="white"), aes(generation,snails, color=as.factor(group)))+
geom_line()
sim_snails <- function(popsize=50, tidepools = 3, ngen = 10){
snail_df <- generate_gen1(popsize,tidepools)
#snail_df <- generate_new_gen(snail_df)
snail_df <- many_new_gens(snail_df, ngen)
#above assumes each group is a separate pop evolving
snail_df$tidepool <- as.factor(snail_df$tidepool)
return(snail_df)
}
snail_df <- sim_snails()
ggplot(filter(snail_df,snailcolor=="white"), aes(generation,snails, color=tidepool))+
geom_line()
generate_gen1 <- function(popsize=50, tidepools = 3){
tidepool <- rep(1:tidepools, each=2)
generation <- rep(0, each=tidepools*2)
snailcolor <- rep(c("white","red"),tidepools)
snails <- rep(popsize/2,tidepools)
data.frame(group,generation,snailcolor,snails)
}
generate_new_gena <- function(snail_df){
popsize <- snail_df$snails[1]+snail_df$snails[2]
prior_gen <- max(snail_df$generation)
new_gen <- prior_gen +1
just_prior_gen_df <- filter(snail_df, generation == prior_gen) %>% filter(snailcolor == "white")
df_rows <- nrow(just_prior_gen_df)
for(i in 1:df_rows){
p <- just_prior_gen_df[i,"snails"] / popsize
new_white_count <- sum(runif(popsize) < p)
#new_snails <- recode(new_snails,"TRUE" = "white", "FALSE" = "red")
new_row1 <- list(just_prior_gen_df[i,1],new_gen, "white", new_white_count)
new_row2 <- list(just_prior_gen_df[i,1],new_gen, "red", popsize-new_white_count)
snail_df <- rbind(snail_df,new_row2,new_row1)
}
return(snail_df)
}
generate_new_gen <- function(snail_df){
popsize <- snail_df$snails[1]*2
prior_gen <- max(snail_df$generation)
new_gen <- prior_gen +1
just_prior_gen_df <- filter(snail_df, generation == prior_gen) %>% filter(snailcolor == "white")
df_rows <- nrow(just_prior_gen_df)
for(i in 1:df_rows){
snails <- c(rep("w",just_prior_gen_df$snails[i]),
rep("r",popsize-just_prior_gen_df$snails[i])) #vector of snails
newsnails <- sample(snails, size = popsize/2, replace = FALSE)
new_white_count <- 2* sum(newsnails=="w") #find whites and double
new_row1 <- list(just_prior_gen_df[i,1],new_gen, "white", new_white_count)
new_row2 <- list(just_prior_gen_df[i,1],new_gen, "red", popsize-new_white_count)
snail_df <- rbind(snail_df,new_row2,new_row1)
}
return(snail_df)
}
many_new_gens <- function(snail_df, ngen = 10){
for(i in 1:ngen){
snail_df <- generate_new_gen(snail_df)
}
return(snail_df)
}
sim_snails <- function(popsize=50, tidepools = 3, ngen = 10){
snail_df <- generate_gen1(popsize,tidepools)
#snail_df <- generate_new_gen(snail_df)
snail_df <- many_new_gens(snail_df, ngen)
#above assumes each group is a separate pop evolving
snail_df$tidepool <- as.factor(snail_df$tidepool)
return(snail_df)
}
snail_df <- sim_snails()
generate_gen1 <- function(popsize=50, tidepools = 3){
tidepool <- rep(1:tidepools, each=2)
generation <- rep(0, each=tidepools*2)
snailcolor <- rep(c("white","red"),tidepools)
snails <- rep(popsize/2,tidepools)
data.frame(tidepool,generation,snailcolor,snails)
}
generate_new_gena <- function(snail_df){
popsize <- snail_df$snails[1]+snail_df$snails[2]
prior_gen <- max(snail_df$generation)
new_gen <- prior_gen +1
just_prior_gen_df <- filter(snail_df, generation == prior_gen) %>% filter(snailcolor == "white")
df_rows <- nrow(just_prior_gen_df)
for(i in 1:df_rows){
p <- just_prior_gen_df[i,"snails"] / popsize
new_white_count <- sum(runif(popsize) < p)
#new_snails <- recode(new_snails,"TRUE" = "white", "FALSE" = "red")
new_row1 <- list(just_prior_gen_df[i,1],new_gen, "white", new_white_count)
new_row2 <- list(just_prior_gen_df[i,1],new_gen, "red", popsize-new_white_count)
snail_df <- rbind(snail_df,new_row2,new_row1)
}
return(snail_df)
}
generate_new_gen <- function(snail_df){
popsize <- snail_df$snails[1]*2
prior_gen <- max(snail_df$generation)
new_gen <- prior_gen +1
just_prior_gen_df <- filter(snail_df, generation == prior_gen) %>% filter(snailcolor == "white")
df_rows <- nrow(just_prior_gen_df)
for(i in 1:df_rows){
snails <- c(rep("w",just_prior_gen_df$snails[i]),
rep("r",popsize-just_prior_gen_df$snails[i])) #vector of snails
newsnails <- sample(snails, size = popsize/2, replace = FALSE)
new_white_count <- 2* sum(newsnails=="w") #find whites and double
new_row1 <- list(just_prior_gen_df[i,1],new_gen, "white", new_white_count)
new_row2 <- list(just_prior_gen_df[i,1],new_gen, "red", popsize-new_white_count)
snail_df <- rbind(snail_df,new_row2,new_row1)
}
return(snail_df)
}
many_new_gens <- function(snail_df, ngen = 10){
for(i in 1:ngen){
snail_df <- generate_new_gen(snail_df)
}
return(snail_df)
}
sim_snails <- function(popsize=50, tidepools = 3, ngen = 10){
snail_df <- generate_gen1(popsize,tidepools)
#snail_df <- generate_new_gen(snail_df)
snail_df <- many_new_gens(snail_df, ngen)
#above assumes each group is a separate pop evolving
snail_df$tidepool <- as.factor(snail_df$tidepool)
return(snail_df)
}
snail_df <- sim_snails()
ggplot(filter(snail_df,snailcolor=="white"), aes(generation,snails, color=tidepool))+
geom_line()
generate_gen1 <- function(popsize=50, tidepools = 3){
tidepool <- rep(1:tidepools, each=2)
generation <- rep(0, each=tidepools*2)
snailcolor <- rep(c("white","red"),tidepools)
snails <- rep(popsize/2,tidepools)
data.frame(tidepool,generation,snailcolor,snails)
}
generate_new_gena <- function(snail_df){
popsize <- snail_df$snails[1]+snail_df$snails[2]
prior_gen <- max(snail_df$generation)
new_gen <- prior_gen +1
just_prior_gen_df <- filter(snail_df, generation == prior_gen) %>% filter(snailcolor == "white")
df_rows <- nrow(just_prior_gen_df)
for(i in 1:df_rows){
p <- just_prior_gen_df[i,"snails"] / popsize
new_white_count <- sum(runif(popsize) < p)
#new_snails <- recode(new_snails,"TRUE" = "white", "FALSE" = "red")
new_row1 <- list(just_prior_gen_df[i,1],new_gen, "white", new_white_count)
new_row2 <- list(just_prior_gen_df[i,1],new_gen, "red", popsize-new_white_count)
snail_df <- rbind(snail_df,new_row2,new_row1)
}
return(snail_df)
}
generate_new_gen <- function(snail_df){
popsize <- snail_df$snails[1]*2
prior_gen <- max(snail_df$generation)
new_gen <- prior_gen +1
just_prior_gen_df <- filter(snail_df, generation == prior_gen) %>% filter(snailcolor == "white")
df_rows <- nrow(just_prior_gen_df)
for(i in 1:df_rows){
snails <- c(rep("w",just_prior_gen_df$snails[i]),
rep("r",popsize-just_prior_gen_df$snails[i])) #vector of snails
newsnails <- sample(snails, size = popsize/2, replace = FALSE)
new_white_count <- 2* sum(newsnails=="w") #find whites and double
new_row1 <- list(just_prior_gen_df[i,1],new_gen, "white", new_white_count)
new_row2 <- list(just_prior_gen_df[i,1],new_gen, "red", popsize-new_white_count)
snail_df <- rbind(snail_df,new_row2,new_row1)
}
return(snail_df)
}
many_new_gens <- function(snail_df, ngen = 10){
for(i in 1:ngen){
snail_df <- generate_new_gen(snail_df)
}
return(snail_df)
}
sim_snails <- function(popsize=50, tidepools = 3, ngen = 10){
snail_df <- generate_gen1(popsize,tidepools)
#snail_df <- generate_new_gen(snail_df)
snail_df <- many_new_gens(snail_df, ngen)
#above assumes each group is a separate pop evolving
snail_df$tidepool <- as.factor(snail_df$tidepool)
return(snail_df)
}
snail_df <- sim_snails(popsize=500, tidepools = 5, ngen = 10)
ggplot(filter(snail_df,snailcolor=="white"), aes(generation,snails, color=tidepool))+
geom_line()
snail_df <- sim_snails(popsize=500, tidepools = 5, ngen = 2)
ggplot(filter(snail_df,snailcolor=="white"), aes(generation,snails, color=tidepool))+
geom_line()
generate_gen1 <- function(popsize=50, tidepools = 3){
tidepool <- rep(1:tidepools, each=2)
generation <- as.integer(rep(0, each=tidepools*2))
snailcolor <- rep(c("white","red"),tidepools)
snails <- rep(popsize/2,tidepools)
data.frame(tidepool,generation,snailcolor,snails)
}
generate_new_gena <- function(snail_df){
popsize <- snail_df$snails[1]+snail_df$snails[2]
prior_gen <- max(snail_df$generation)
new_gen <- prior_gen +1
just_prior_gen_df <- filter(snail_df, generation == prior_gen) %>% filter(snailcolor == "white")
df_rows <- nrow(just_prior_gen_df)
for(i in 1:df_rows){
p <- just_prior_gen_df[i,"snails"] / popsize
new_white_count <- sum(runif(popsize) < p)
#new_snails <- recode(new_snails,"TRUE" = "white", "FALSE" = "red")
new_row1 <- list(just_prior_gen_df[i,1],new_gen, "white", new_white_count)
new_row2 <- list(just_prior_gen_df[i,1],new_gen, "red", popsize-new_white_count)
snail_df <- rbind(snail_df,new_row2,new_row1)
}
return(snail_df)
}
generate_new_gen <- function(snail_df){
popsize <- snail_df$snails[1]*2
prior_gen <- max(snail_df$generation)
new_gen <- prior_gen +1
just_prior_gen_df <- filter(snail_df, generation == prior_gen) %>% filter(snailcolor == "white")
df_rows <- nrow(just_prior_gen_df)
for(i in 1:df_rows){
snails <- c(rep("w",just_prior_gen_df$snails[i]),
rep("r",popsize-just_prior_gen_df$snails[i])) #vector of snails
newsnails <- sample(snails, size = popsize/2, replace = FALSE)
new_white_count <- 2* sum(newsnails=="w") #find whites and double
new_row1 <- list(just_prior_gen_df[i,1],new_gen, "white", new_white_count)
new_row2 <- list(just_prior_gen_df[i,1],new_gen, "red", popsize-new_white_count)
snail_df <- rbind(snail_df,new_row2,new_row1)
}
return(snail_df)
}
many_new_gens <- function(snail_df, ngen = 10){
for(i in 1:ngen){
snail_df <- generate_new_gen(snail_df)
}
return(snail_df)
}
sim_snails <- function(popsize=50, tidepools = 3, ngen = 10){
snail_df <- generate_gen1(popsize,tidepools)
#snail_df <- generate_new_gen(snail_df)
snail_df <- many_new_gens(snail_df, ngen)
#above assumes each group is a separate pop evolving
snail_df$tidepool <- as.factor(snail_df$tidepool)
return(snail_df)
}
snail_df <- sim_snails(popsize=500, tidepools = 5, ngen = 2)
ggplot(filter(snail_df,snailcolor=="white"), aes(generation,snails, color=tidepool))+
geom_line()
snail_df <- sim_snails(popsize=500, tidepools = 5, ngen = 20)
ggplot(filter(snail_df,snailcolor=="white"), aes(generation,snails, color=tidepool))+
geom_line()
library(roxygen2)
library(devtools)
install.packages("tidytext")
library(tidytext)
?bind_tf_idf
?bind_tf_idf.default
?mallet_tidiers
library(IntroBioTools)
library(IntroBioTools)
sim_snails()
devtools::document()
library(IntroBioTools)
sim_snails()
generate_gen1()
?sim_snails
?generate_gen1
snail_df <- sim_snails(popsize=500, tidepools = 5, ngen = 20)
ggplot(filter(snail_df,snailcolor=="white"), aes(generation,snails, color=tidepool))+  geom_line()
